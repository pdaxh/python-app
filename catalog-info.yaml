apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: python-app
  title: Python Flask App
  description: A simple Flask web application with health checks and Kubernetes deployment
  tags:
    - python
    - flask
    - web
    - api
    - kubernetes
  annotations:
    backstage.io/managed-by-location: file:./catalog-info.yaml
    backstage.io/techdocs-ref: dir:.
    github.com/project-slug: pdaxh/python-app
spec:
  type: service
  lifecycle: production
  owner: team-ulp
  system: ulp-platform
  providesApis:
    - python-app-api
  links:
    - url: https://github.com/pdaxh/python-app
      title: Source Code
      icon: github
    - url: http://localhost:8080
      title: Application
      icon: web
    - url: http://localhost:8080/health
      title: Health Check
      icon: health
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: python-app-api
  title: Python App API
  description: REST API endpoints for the Python Flask application
  tags:
    - python
    - flask
    - rest
    - api
  annotations:
    backstage.io/managed-by-location: file:./catalog-info.yaml
spec:
  type: openapi
  lifecycle: production
  owner: team-ulp
  system: ulp-platform
  definition: |
    openapi: 3.0.0
    info:
      title: Python App API
      version: 1.0.0
      description: A simple Flask API with health checks
    servers:
      - url: http://localhost:8080
        description: Development server
    paths:
      /:
        get:
          summary: Home endpoint
          description: Returns a welcome message
          responses:
            '200':
              description: Welcome message
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Hello from Python App!"
      /health:
        get:
          summary: Health check endpoint
          description: Returns the health status of the application
          responses:
            '200':
              description: Application is healthy
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "healthy"


