apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app-tekton
  namespace: daaxh25-dev
  labels:
    app: python-app-tekton
    app.kubernetes.io/name: python-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-app-tekton
  template:
    metadata:
      labels:
        app: python-app-tekton
        app.kubernetes.io/name: python-app
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: python-app
        image: image-registry.openshift-image-registry.svc:5000/daaxh25-dev/python-app-pipeline:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: FLASK_RUN_PORT
          value: "8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 2000
