apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: python-app-dev
  namespace: daaxh25-dev
  annotations:
    description: "Python Flask application template for development with debugging enabled"
    iconClass: "icon-python"
    tags: "python,flask,web,development,debug"
    openshift.io/display-name: "Python Flask App (Development)"
  labels:
    app.kubernetes.io/name: python-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: template
    template: python-app-dev

parameters:
  - name: APPLICATION_NAME
    displayName: "Application Name"
    description: "The name of the application"
    value: "python-app-dev"
    required: true

  - name: NAMESPACE
    displayName: "Namespace"
    description: "The namespace to deploy the application"
    value: "daaxh25-dev"
    required: true

  - name: IMAGE_NAME
    displayName: "Image Name"
    description: "The full image name including registry and tag"
    value: "image-registry.openshift-image-registry.svc:5000/daaxh25-dev/python-app-pipeline:latest"
    required: true

  - name: DEBUG_PORT
    displayName: "Debug Port"
    description: "Port for Python debugger"
    value: "5678"
    required: true

objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "${APPLICATION_NAME}-config"
      namespace: "${NAMESPACE}"
      labels:
        app: "${APPLICATION_NAME}"
        template: python-app-dev
    data:
      FLASK_APP: "app.py"
      FLASK_ENV: "development"
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_RUN_PORT: "8080"
      FLASK_DEBUG: "1"
      PYTHONUNBUFFERED: "1"
      DEBUG_PORT: "${DEBUG_PORT}"

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: "${APPLICATION_NAME}"
      namespace: "${NAMESPACE}"
      labels:
        app: "${APPLICATION_NAME}"
        template: python-app-dev
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: "${APPLICATION_NAME}"
      template:
        metadata:
          labels:
            app: "${APPLICATION_NAME}"
        spec:
          containers:
          - name: python-app
            image: "${IMAGE_NAME}"
            ports:
            - containerPort: 8080
              name: http
            - containerPort: 5678
              name: debug
            envFrom:
            - configMapRef:
                name: "${APPLICATION_NAME}-config"
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            command: ["/bin/bash"]
            args:
            - -c
            - |
              pip install debugpy
              python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m flask run --host=0.0.0.0 --port=8080

  - apiVersion: v1
    kind: Service
    metadata:
      name: "${APPLICATION_NAME}"
      namespace: "${NAMESPACE}"
      labels:
        app: "${APPLICATION_NAME}"
        template: python-app-dev
    spec:
      type: ClusterIP
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: debug
        port: 5678
        protocol: TCP
        targetPort: 5678
      selector:
        app: "${APPLICATION_NAME}"

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: "${APPLICATION_NAME}-route"
      namespace: "${NAMESPACE}"
      labels:
        app: "${APPLICATION_NAME}"
        template: python-app-dev
    spec:
      port:
        targetPort: http
      to:
        kind: Service
        name: "${APPLICATION_NAME}"
        weight: 100

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: "${APPLICATION_NAME}-debug-route"
      namespace: "${NAMESPACE}"
      labels:
        app: "${APPLICATION_NAME}"
        template: python-app-dev
    spec:
      port:
        targetPort: debug
      to:
        kind: Service
        name: "${APPLICATION_NAME}"
        weight: 100
